pipeline {
  agent none
  stages {
    stage('Python: Build and Test') {
      matrix {
        agent any
        axes {
          axis {
            name 'TOX_ENV'
            values 'py36', 'py37', 'py38', 'manifest'
          }
        }
        stages {
          stage('RunTox') {
            steps {
              script {
                def images = [py36: 'python:3.6', py37: 'python:3.7', py38: 'python:3.8']
                def image = images.get(TOX_ENV, 'python:3.7')
                docker.image(image).inside {
                  sh "pip install --upgrade tox && tox -e ${TOX_ENV} -c python/tox.ini"
                }
              }
            }
          }
        }
      }
    }
    stage('Python: Package') {
      when {
        tag 'v*'
        beforeAgent true
      }
      agent {
        docker {
          image 'python:3.7'
        }
      }
      environment {
        VERSION = sh(script: 'python setup.py --version', returnStdout: true).trim()
      }
      steps {
        dir('python')  {
          sh 'python setup.py sdist bdist_wheel'
          rtUpload(
            serverId: 'pano',
            spec: '''{
              "files": [
                {
                  "pattern": "dist/*",
                  "target": "pypi/tel-grammar/${VERSION}/",
                  "props": "pypi.name=tel-grammar;pypi.normalized.name=tel-grammar;pypi.requires.python=>=3.6;pypi.version=${VERSION}"
                }
              ]
            }''',
            failNoOp: true,
          )
        }
      }
      post {
        success {
          archiveArtifacts 'dist/*'
        }
      }
    }
  }
}
