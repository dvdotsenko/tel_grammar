// Generated from grammar/Tel.g4 by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');



var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002\u001d\u00aa\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0003\u0002\u0005\u0002;\n",
    "\u0002\u0003\u0002\u0006\u0002>\n\u0002\r\u0002\u000e\u0002?\u0003\u0003",
    "\u0005\u0003C\n\u0003\u0003\u0003\u0006\u0003F\n\u0003\r\u0003\u000e",
    "\u0003G\u0003\u0003\u0003\u0003\u0006\u0003L\n\u0003\r\u0003\u000e\u0003",
    "M\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003",
    "\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0006\u0007`",
    "\n\u0007\r\u0007\u000e\u0007a\u0003\b\u0003\b\u0003\b\u0003\b\u0007",
    "\bh\n\b\f\b\u000e\bk\u000b\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t",
    "\u0003\t\u0007\ts\n\t\f\t\u000e\tv\u000b\t\u0003\t\u0003\t\u0003\n\u0003",
    "\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003\u000e",
    "\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010",
    "\u0003\u0010\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012",
    "\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0003\u0015",
    "\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0017",
    "\u0003\u0017\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019\u0003\u001a",
    "\u0003\u001a\u0003\u001b\u0003\u001b\u0003\u001c\u0006\u001c\u00a5\n",
    "\u001c\r\u001c\u000e\u001c\u00a6\u0003\u001c\u0003\u001c\u0002\u0002",
    "\u001d\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f",
    "\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d",
    "\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017-\u0018",
    "/\u00191\u001a3\u001b5\u001c7\u001d\u0003\u0002\u0007\u0003\u00022;",
    "\u0007\u0002002;C\\aac|\u0003\u0002$$\u0003\u0002))\u0005\u0002\u000b",
    "\f\u000f\u000f\"\"\u0002\u00b4\u0002\u0003\u0003\u0002\u0002\u0002\u0002",
    "\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002",
    "\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002",
    "\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002",
    "\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002",
    "\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002",
    "\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002",
    "\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002",
    "!\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003",
    "\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002",
    "\u0002\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002",
    "\u0002\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002",
    "\u00023\u0003\u0002\u0002\u0002\u00025\u0003\u0002\u0002\u0002\u0002",
    "7\u0003\u0002\u0002\u0002\u0003:\u0003\u0002\u0002\u0002\u0005B\u0003",
    "\u0002\u0002\u0002\u0007O\u0003\u0002\u0002\u0002\tT\u0003\u0002\u0002",
    "\u0002\u000bZ\u0003\u0002\u0002\u0002\r_\u0003\u0002\u0002\u0002\u000f",
    "c\u0003\u0002\u0002\u0002\u0011n\u0003\u0002\u0002\u0002\u0013y\u0003",
    "\u0002\u0002\u0002\u0015{\u0003\u0002\u0002\u0002\u0017}\u0003\u0002",
    "\u0002\u0002\u0019\u007f\u0003\u0002\u0002\u0002\u001b\u0081\u0003\u0002",
    "\u0002\u0002\u001d\u0083\u0003\u0002\u0002\u0002\u001f\u0086\u0003\u0002",
    "\u0002\u0002!\u0089\u0003\u0002\u0002\u0002#\u008c\u0003\u0002\u0002",
    "\u0002%\u008f\u0003\u0002\u0002\u0002\'\u0091\u0003\u0002\u0002\u0002",
    ")\u0093\u0003\u0002\u0002\u0002+\u0096\u0003\u0002\u0002\u0002-\u0099",
    "\u0003\u0002\u0002\u0002/\u009b\u0003\u0002\u0002\u00021\u009d\u0003",
    "\u0002\u0002\u00023\u009f\u0003\u0002\u0002\u00025\u00a1\u0003\u0002",
    "\u0002\u00027\u00a4\u0003\u0002\u0002\u00029;\u0007/\u0002\u0002:9\u0003",
    "\u0002\u0002\u0002:;\u0003\u0002\u0002\u0002;=\u0003\u0002\u0002\u0002",
    "<>\t\u0002\u0002\u0002=<\u0003\u0002\u0002\u0002>?\u0003\u0002\u0002",
    "\u0002?=\u0003\u0002\u0002\u0002?@\u0003\u0002\u0002\u0002@\u0004\u0003",
    "\u0002\u0002\u0002AC\u0007/\u0002\u0002BA\u0003\u0002\u0002\u0002BC",
    "\u0003\u0002\u0002\u0002CE\u0003\u0002\u0002\u0002DF\t\u0002\u0002\u0002",
    "ED\u0003\u0002\u0002\u0002FG\u0003\u0002\u0002\u0002GE\u0003\u0002\u0002",
    "\u0002GH\u0003\u0002\u0002\u0002HI\u0003\u0002\u0002\u0002IK\u00070",
    "\u0002\u0002JL\t\u0002\u0002\u0002KJ\u0003\u0002\u0002\u0002LM\u0003",
    "\u0002\u0002\u0002MK\u0003\u0002\u0002\u0002MN\u0003\u0002\u0002\u0002",
    "N\u0006\u0003\u0002\u0002\u0002OP\u0007v\u0002\u0002PQ\u0007t\u0002",
    "\u0002QR\u0007w\u0002\u0002RS\u0007g\u0002\u0002S\b\u0003\u0002\u0002",
    "\u0002TU\u0007h\u0002\u0002UV\u0007c\u0002\u0002VW\u0007n\u0002\u0002",
    "WX\u0007u\u0002\u0002XY\u0007g\u0002\u0002Y\n\u0003\u0002\u0002\u0002",
    "Z[\u0007p\u0002\u0002[\\\u0007q\u0002\u0002\\]\u0007v\u0002\u0002]\f",
    "\u0003\u0002\u0002\u0002^`\t\u0003\u0002\u0002_^\u0003\u0002\u0002\u0002",
    "`a\u0003\u0002\u0002\u0002a_\u0003\u0002\u0002\u0002ab\u0003\u0002\u0002",
    "\u0002b\u000e\u0003\u0002\u0002\u0002ci\u0007$\u0002\u0002de\u0007^",
    "\u0002\u0002eh\u0007$\u0002\u0002fh\n\u0004\u0002\u0002gd\u0003\u0002",
    "\u0002\u0002gf\u0003\u0002\u0002\u0002hk\u0003\u0002\u0002\u0002ig\u0003",
    "\u0002\u0002\u0002ij\u0003\u0002\u0002\u0002jl\u0003\u0002\u0002\u0002",
    "ki\u0003\u0002\u0002\u0002lm\u0007$\u0002\u0002m\u0010\u0003\u0002\u0002",
    "\u0002nt\u0007)\u0002\u0002op\u0007^\u0002\u0002ps\u0007)\u0002\u0002",
    "qs\n\u0005\u0002\u0002ro\u0003\u0002\u0002\u0002rq\u0003\u0002\u0002",
    "\u0002sv\u0003\u0002\u0002\u0002tr\u0003\u0002\u0002\u0002tu\u0003\u0002",
    "\u0002\u0002uw\u0003\u0002\u0002\u0002vt\u0003\u0002\u0002\u0002wx\u0007",
    ")\u0002\u0002x\u0012\u0003\u0002\u0002\u0002yz\u0007*\u0002\u0002z\u0014",
    "\u0003\u0002\u0002\u0002{|\u0007+\u0002\u0002|\u0016\u0003\u0002\u0002",
    "\u0002}~\u0007~\u0002\u0002~\u0018\u0003\u0002\u0002\u0002\u007f\u0080",
    "\u0007<\u0002\u0002\u0080\u001a\u0003\u0002\u0002\u0002\u0081\u0082",
    "\u0007.\u0002\u0002\u0082\u001c\u0003\u0002\u0002\u0002\u0083\u0084",
    "\u0007~\u0002\u0002\u0084\u0085\u0007~\u0002\u0002\u0085\u001e\u0003",
    "\u0002\u0002\u0002\u0086\u0087\u0007(\u0002\u0002\u0087\u0088\u0007",
    "(\u0002\u0002\u0088 \u0003\u0002\u0002\u0002\u0089\u008a\u0007?\u0002",
    "\u0002\u008a\u008b\u0007?\u0002\u0002\u008b\"\u0003\u0002\u0002\u0002",
    "\u008c\u008d\u0007#\u0002\u0002\u008d\u008e\u0007?\u0002\u0002\u008e",
    "$\u0003\u0002\u0002\u0002\u008f\u0090\u0007@\u0002\u0002\u0090&\u0003",
    "\u0002\u0002\u0002\u0091\u0092\u0007>\u0002\u0002\u0092(\u0003\u0002",
    "\u0002\u0002\u0093\u0094\u0007@\u0002\u0002\u0094\u0095\u0007?\u0002",
    "\u0002\u0095*\u0003\u0002\u0002\u0002\u0096\u0097\u0007>\u0002\u0002",
    "\u0097\u0098\u0007?\u0002\u0002\u0098,\u0003\u0002\u0002\u0002\u0099",
    "\u009a\u0007-\u0002\u0002\u009a.\u0003\u0002\u0002\u0002\u009b\u009c",
    "\u0007/\u0002\u0002\u009c0\u0003\u0002\u0002\u0002\u009d\u009e\u0007",
    ",\u0002\u0002\u009e2\u0003\u0002\u0002\u0002\u009f\u00a0\u00071\u0002",
    "\u0002\u00a04\u0003\u0002\u0002\u0002\u00a1\u00a2\u0007A\u0002\u0002",
    "\u00a26\u0003\u0002\u0002\u0002\u00a3\u00a5\t\u0006\u0002\u0002\u00a4",
    "\u00a3\u0003\u0002\u0002\u0002\u00a5\u00a6\u0003\u0002\u0002\u0002\u00a6",
    "\u00a4\u0003\u0002\u0002\u0002\u00a6\u00a7\u0003\u0002\u0002\u0002\u00a7",
    "\u00a8\u0003\u0002\u0002\u0002\u00a8\u00a9\b\u001c\u0002\u0002\u00a9",
    "8\u0003\u0002\u0002\u0002\u000e\u0002:?BGMagirt\u00a6\u0003\b\u0002",
    "\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function TelLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

TelLexer.prototype = Object.create(antlr4.Lexer.prototype);
TelLexer.prototype.constructor = TelLexer;

Object.defineProperty(TelLexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

TelLexer.EOF = antlr4.Token.EOF;
TelLexer.INT = 1;
TelLexer.REAL = 2;
TelLexer.TRUE = 3;
TelLexer.FALSE = 4;
TelLexer.NOT = 5;
TelLexer.WORD = 6;
TelLexer.STRING_CONSTANT = 7;
TelLexer.SINGLE_QUOTED_ELEMENT = 8;
TelLexer.L_BRACKET = 9;
TelLexer.R_BRACKET = 10;
TelLexer.TAXON_NAMESPACE_DELIMITER = 11;
TelLexer.TAXON_TAG_DELIMITER = 12;
TelLexer.FN_PARAMETER_DELIMITER = 13;
TelLexer.OR = 14;
TelLexer.AND = 15;
TelLexer.EQ = 16;
TelLexer.NEQ = 17;
TelLexer.GT = 18;
TelLexer.LT = 19;
TelLexer.GTEQ = 20;
TelLexer.LTEQ = 21;
TelLexer.PLUS = 22;
TelLexer.MINUS = 23;
TelLexer.MULT = 24;
TelLexer.DIV = 25;
TelLexer.OPTIONAL_TAXON_OPERATOR = 26;
TelLexer.WS = 27;

TelLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

TelLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

TelLexer.prototype.literalNames = [ null, null, null, "'true'", "'false'", 
                                    "'not'", null, null, null, "'('", "')'", 
                                    "'|'", "':'", "','", "'||'", "'&&'", 
                                    "'=='", "'!='", "'>'", "'<'", "'>='", 
                                    "'<='", "'+'", "'-'", "'*'", "'/'", 
                                    "'?'" ];

TelLexer.prototype.symbolicNames = [ null, "INT", "REAL", "TRUE", "FALSE", 
                                     "NOT", "WORD", "STRING_CONSTANT", "SINGLE_QUOTED_ELEMENT", 
                                     "L_BRACKET", "R_BRACKET", "TAXON_NAMESPACE_DELIMITER", 
                                     "TAXON_TAG_DELIMITER", "FN_PARAMETER_DELIMITER", 
                                     "OR", "AND", "EQ", "NEQ", "GT", "LT", 
                                     "GTEQ", "LTEQ", "PLUS", "MINUS", "MULT", 
                                     "DIV", "OPTIONAL_TAXON_OPERATOR", "WS" ];

TelLexer.prototype.ruleNames = [ "INT", "REAL", "TRUE", "FALSE", "NOT", 
                                 "WORD", "STRING_CONSTANT", "SINGLE_QUOTED_ELEMENT", 
                                 "L_BRACKET", "R_BRACKET", "TAXON_NAMESPACE_DELIMITER", 
                                 "TAXON_TAG_DELIMITER", "FN_PARAMETER_DELIMITER", 
                                 "OR", "AND", "EQ", "NEQ", "GT", "LT", "GTEQ", 
                                 "LTEQ", "PLUS", "MINUS", "MULT", "DIV", 
                                 "OPTIONAL_TAXON_OPERATOR", "WS" ];

TelLexer.prototype.grammarFileName = "Tel.g4";


exports.TelLexer = TelLexer;

